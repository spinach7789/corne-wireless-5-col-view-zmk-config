#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hm: hm {
            compatible = "zmk,behavior-hold-tap";
            label = "HM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <350>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            flavor = "tap-preferred";
        };

        TD_NUM: TD_NUM {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_NUM";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&mo 1>;

            tapping-term-ms = <350>;
        };

        TD_DASH: TD_DASH {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_DASH";
            #binding-cells = <0>;
            bindings = <&kp P>, <&kp MINUS>;

            tapping-term-ms = <350>;
        };

        TD_QUOTE: TD_QUOTE {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_QUOTE";
            #binding-cells = <0>;
            bindings = <&AS EXCLAMATION SLASH>, <&kp SQT>;

            tapping-term-ms = <350>;
        };

        TD_CHEAT: TD_CHEAT {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_CHEAT";
            #binding-cells = <0>;
            bindings = <&kp SEMICOLON>, <&kp GRAVE>;

            tapping-term-ms = <350>;
        };

        NM: NM {
            compatible = "zmk,behavior-hold-tap";
            label = "NM";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            bindings = <&mo>, <&tog>;

            hold-trigger-key-positions = <41>;
        };

        AS: AS {
            compatible = "zmk,behavior-hold-tap";
            label = "AS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <135>;
            flavor = "tap-preferred";
        };

        TD_Equal: TD_Equal {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_EQUAL";
            #binding-cells = <0>;
            bindings = <&kp A>, <&kp EQUAL>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Com_Del {
            bindings = <&kp DELETE>;
            key-positions = <1 2>;
        };

        Com_Star {
            bindings = <&kp LS(NUMBER_8)>;
            key-positions = <10 9>;
        };

        Com_Lock {
            bindings = <&kp LG(L)>;
            key-positions = <34 33>;
        };

        Com_NUM {
            bindings = <&kp LS(NUMBER_3)>;
            key-positions = <5 4>;
        };

        Com_big {
            bindings = <&Big>;
            key-positions = <16 17>;
        };

        Com_small {
            bindings = <&Small>;
            key-positions = <29 28>;
        };

        ToNav {
            bindings = <&tog 2>;
            key-positions = <38 37>;
        };

        ToFunc {
            bindings = <&tog 3>;
            key-positions = <38 36>;
        };

        ToNum {
            bindings = <&tog 1>;
            key-positions = <39 41>;
        };

        ToSpecial {
            bindings = <&mo 4>;
            key-positions = <41 40>;
        };
    };

    macros {
        Big: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LEFT_BRACKET &kp RIGHT_BRACKET>,
                <&macro_wait_time 50>,
                <&kp LEFT>;

            label = "NEW_MACRO";
        };

        Small: Small {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS>,
                <&macro_wait_time 50>,
                <&kp LEFT>;

            label = "SMALL";
        };

        StopWork: StopWork {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&none &kp MINUS &kp SPACE &kp R &kp O &kp D &kp L &kp S &kp SPACE &kp T &kp K &kp D &kp B>,
                <&macro_press>;

            label = "STOPWORK";
        };

        AutoSwitch: AutoSwitch {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&to 0>,
                <&macro_press>,
                <&kp LEFT_SHIFT>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LEFT_SHIFT>;

            label = "AUTOSWITCH";
        };

        AutoCtrl: AutoCtrl {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&to 0>,
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LCTRL>;

            label = "AUTOCTRL";
        };

        AutoAlt: AutoAlt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&to 0>,
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "AUTOALT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        QWERTY {
            display-name = "QWERTY";
            bindings = <
&trans  &hm ESC Q  &kp W           &kp E             &kp R        &kp T        &kp Y      &kp U          &kp I             &kp O           &TD_DASH   &trans
&trans  &TD_Equal  &hm LEFT_ALT S  &hm LEFT_SHIFT D  &hm LCTRL F  &kp G        &kp H      &hm LCTRL J    &hm LEFT_SHIFT K  &hm LEFT_ALT L  &TD_CHEAT  &trans
&trans  &kp Z      &kp X           &kp C             &kp V        &kp B        &kp N      &kp M          &kp COMMA         &kp DOT         &TD_QUOTE  &trans
                                   &lt 3 TAB         &lt 2 LANG1  &kp SPACE    &kp ENTER  &kp BACKSPACE  &TD_NUM
            >;

            label = "QWERTY";
        };

        Num {
            display-name = "Num";
            bindings = <
&trans  &kp ESC  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL            &kp PLUS   &none      &none           &none          &trans  &trans
&trans  &kp TAB  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp LEFT_BRACKET     &kp MINUS  &kp LCTRL  &kp LEFT_SHIFT  &kp RIGHT_ALT  &trans  &trans
&trans  &none    &kp N7        &kp NUMBER_8  &kp N9        &kp RIGHT_BRACKET    &none      &none      &trans          &trans         &trans  &trans
                               &kp NUMBER_0  &mo 2         &trans               &trans     &trans     &to 0
            >;
        };

        Nav {
            display-name = "Nav";
            bindings = <
&trans  &bt BT_SEL 3  &trans        &trans          &kp LC(LEFT_SHIFT)  &trans    &kp LC(F)   &kp LC(Z)       &kp UP     &kp LC(Y)  &bt BT_SEL 0  &trans
&trans  &bt BT_SEL 4  &kp LEFT_ALT  &kp LEFT_SHIFT  &kp LCTRL           &trans    &kp END     &kp LEFT_ARROW  &kp DOWN   &kp RIGHT  &bt BT_SEL 1  &trans
&trans  &none         &trans        &trans          &trans              &trans    &kp INSERT  &kp LC(C)       &kp LC(V)  &kp LC(X)  &bt BT_SEL 2  &trans
                                    &trans          &trans              &trans    &trans      &trans          &trans
            >;
        };

        Function {
            display-name = "Function";
            bindings = <
&trans  &trans  &trans        &trans          &trans     &StopWork    &kp F1  &kp F2   &kp F3   &kp F4   &kp SQT       &trans
&trans  &trans  &kp LEFT_ALT  &kp LEFT_SHIFT  &kp LCTRL  &trans       &kp F5  &kp F6   &kp F7   &kp F8   &kp INSERT    &trans
&trans  &trans  &trans        &trans          &trans     &trans       &kp F9  &kp F10  &kp F11  &kp F12  &kp LEFT_WIN  &trans
                              &trans          &trans     &trans       &trans  &trans   &trans
            >;
        };

        Special {
            bindings = <
&trans  &trans  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH              &trans                   &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp DOLLAR       &kp PERCENT   &kp LCTRL             &trans                   &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp AMPERSAND    &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &trans  &trans  &trans  &trans  &trans  &trans
                                 &trans        &trans                &trans                   &trans  &trans  &trans
            >;
        };
    };
};
